version: '3.8'

services:
  # Database Services
  postgres:
    image: postgres:15
    container_name: bsky-postgres-test
    environment:
      POSTGRES_DB: bsky_automation
      POSTGRES_USER: bsky_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-bsky_password}
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
      - ./configs/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./scripts/seed.sql:/docker-entrypoint-initdb.d/seed.sql
    ports:
      - "5432:5432"
    networks:
      - bsky-test-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bsky_user -d bsky_automation"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: bsky-redis-test
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis_password}
    volumes:
      - redis_test_data:/data
    ports:
      - "6379:6379"
    networks:
      - bsky-test-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Core Services (only implemented ones)
  account-manager:
    build:
      context: .
      dockerfile: ./services/account-manager/Dockerfile
    container_name: bsky-account-manager-test
    environment:
      - DATABASE_URL=postgres://bsky_user:${POSTGRES_PASSWORD:-bsky_password}@postgres:5432/bsky_automation?sslmode=disable
      - REDIS_URL=redis://:${REDIS_PASSWORD:-redis_password}@redis:6379/0
      - SERVICE_PORT=8001
      - JWT_SECRET=${JWT_SECRET:-test-jwt-secret-key}
      - ENVIRONMENT=development
    ports:
      - "8001:8001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - bsky-test-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  proxy-manager:
    build:
      context: .
      dockerfile: ./services/proxy-manager/Dockerfile
    container_name: bsky-proxy-manager-test
    environment:
      - DATABASE_URL=postgres://bsky_user:${POSTGRES_PASSWORD:-bsky_password}@postgres:5432/bsky_automation?sslmode=disable
      - REDIS_URL=redis://:${REDIS_PASSWORD:-redis_password}@redis:6379/1
      - SERVICE_PORT=8002
      - ENVIRONMENT=development
      - PROXY_HEALTH_CHECK_INTERVAL=60
      - MAX_CONCURRENT_HEALTH_CHECKS=5
      - MAX_PROXY_FAILURES=3
    ports:
      - "8002:8002"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - bsky-test-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_test_data:
  redis_test_data:

networks:
  bsky-test-network:
    driver: bridge
